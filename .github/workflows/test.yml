name: Kind kubernetes Project

on: push
  # pull_request:
  # branches:
  #   - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'
   
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1

      - name: Create Kubernetes Cluster
        run: |
          kind create cluster --config kind-cluster.yaml
          kubectl get nodes

      - name: Set up docker image and load to kind
        run: |
          sh  ./scripts/image.sh
          docker images
          kind load docker-image http-echo:local --name kind            
      
      - name: Deploying Nginix Ingress Controller
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update
          helm install ingress-nginx ingress-nginx/ingress-nginx --namespace ingress-nginx --create-namespace
          kubectl get svc -n ingress-nginx
      
      - name: Installing applications using helm
        run: |
          kubectl create namespace dev
          kubectl delete -A ValidatingWebhookConfiguration ingress-nginx-admission
          helm install http-echo-foo ./github-chart --set instanceName=foo --namespace dev -f github-chart/Values/Dev/values.yaml
          helm status http-echo-foo --namespace dev


      - name: Verifying installation
        run: |
          kubectl get all  --namespace dev
     
      # - name: Add k6 GPG key
      #   run: |
      #     wget -qO - https://dl.k6.io/key.gpg  | sudo apt-key add -
      #     echo "deb [arch=amd64] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
         
      # - name: Install k6
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y k6 jq

      # - name: Run load test
      #   run: |
      #     kubectl port-forward service/foo-service 8080:80 &
      #     kubectl port-forward service/bar-service 8081:80 &
      #     k6 run --vus 50 --duration 1m ./scripts/load-test.js | grep "...:" > results_foo.txt
      #     k6 run --vus 50 --duration 1m ./scripts/load-test-bar.js | grep "...:" > results_bar.txt

      # - name: Upload load testing results Foo
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: k6-results-foo
      #     path: results_foo.txt
      
      # - name: Upload load testing results Bar
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: k6-results-bar
      #     path: results_bar.txt

      # - name: Post Load Test Results to PR
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       const fs = require('fs');
      #       const resultsBar = fs.readFileSync('results_bar.txt', 'utf8');
      #       const resultsFoo = fs.readFileSync('results_foo.txt', 'utf8');
      #       const commentBody = `**Load Test Results**\n\n**Bar Deployment**\n${resultsBar}\n\n**Foo Deployment**\n${resultsFoo}`;
      #       await github.rest.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: commentBody
      #       });