name: Kind kubernetes Project

on: 
    pull_request:
    branches:
    - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'
   
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Create k8s Kind Cluster
        uses: helm/kind-action@v1

      - name: Create Kubernetes Cluster
        run: |
          kind create cluster --config kind-cluster.yaml
          kubectl get nodes

      - name: Set up docker image and load to kind
        run: |
          sh  ./scripts/image.sh
          docker images
          kind load docker-image http-echo:local --name kind            
      
      - name: Deploying Nginix Ingress Controller
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo update
          helm install ingress-nginx ingress-nginx/ingress-nginx --namespace ingress-nginx --create-namespace
          kubectl get svc -n ingress-nginx
      
      - name: Installing applications foo using helm
        run: |
          kubectl create namespace dev
          kubectl delete -A ValidatingWebhookConfiguration ingress-nginx-admission
          helm install app1-release ./github-chart --set instanceName=foo --namespace dev -f github-chart/Values/Dev/values.yaml
          helm status app1-release --namespace dev
          

      - name: Installing applications bar using helm
        run: |
          helm install app2-release ./github-chart --set instanceName=bar --namespace dev -f github-chart/Values/Dev/values.yaml
          helm status app2-release --namespace dev

      - name: Verifying installation
        run: |
          kubectl rollout status deployment.apps/app1-release-foo --namespace dev
          kubectl rollout status deployment.apps/app2-release-bar --namespace dev
          kubectl get all  --namespace dev
          kubectl get ingress --all-namespaces

      - name: Add k6 GPG key
        run: |
          wget -qO - https://dl.k6.io/key.gpg  | sudo apt-key add -
          echo "deb [arch=amd64] https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
         
      - name: Install k6
        run: |
          sudo apt-get update
          sudo apt-get install -y k6 jq
      
      - name: Enabling Port forwarding
        run: |
          kubectl port-forward service/app1-release-foo 8080:80 --namespace dev &
          kubectl port-forward service/app2-release-bar 8081:80 --namespace dev &

      - name: Service Sanity Check
        run: |
          sh  ./scripts/check_service_status.sh

      - name: Run load test
        run: |
          k6 run --vus 50 --duration 1m ./scripts/load-test.js | grep "...:" > results_foo.txt

      - name: Upload load testing results
        uses: actions/upload-artifact@v3
        with:
          name: k6-results-foo
          path: results_foo.txt
    

      - name: Post Load Test Results to PR
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const resultsFoo = fs.readFileSync('results_foo.txt', 'utf8');
            const commentBody = `**Load Test Results**\n\n**Service Deployment**\n${resultsFoo}`;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: commentBody
            });